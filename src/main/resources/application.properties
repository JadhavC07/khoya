spring.application.name=khoya


#server.port=8080
#spring.datasource.url=jdbc:mysql://localhost:3306/khoya
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update

server.port=${PORT}
spring.datasource.url=${DATA_URL}
spring.datasource.username=${DATA_USERNAME}
spring.datasource.password=${DATA_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# For debug
spring.jpa.show-sql=false

# Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Logging Configuration
logging.level.com.project.khoya=DEBUG
logging.level.org.springframework.security=DEBUG


spring.cache.type=redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.timeout=${REDIS_TIMEOUT}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.ssl=true



instagram.api.user-id=${INSTAGRAM_API_USER_ID}
instagram.api.access-token=${INSTAGRAM_API_ACCESS_TOKEN}


# RabbitMQ Configuration (CloudAMQP)
spring.rabbitmq.addresses=${RABIT_ADD}
spring.rabbitmq.username=${RABIT_USERNAME}
spring.rabbitmq.password=${RABIT_PASSWORD}
spring.rabbitmq.virtual-host=${RABIT_VHOST}
spring.rabbitmq.port=${RABIT_HOST}


# Queue names
rabbitmq.queue.social-media=alert-social-media-queue
rabbitmq.queue.notification=alert-notification-queue
rabbitmq.exchange=alert-exchange
rabbitmq.routing-key.social-media=alert.social-media
rabbitmq.routing-key.notification=alert.notification


# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.access-token.expiration=90000000
jwt.refresh-token.expiration=2592000000


# Enable scheduling for token cleanup
spring.task.scheduling.enabled=true

logging.level.org.apache.coyote.http11.Http11Processor=ERROR